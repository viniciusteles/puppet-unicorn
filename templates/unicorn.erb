#! /bin/bash

### BEGIN INIT INFO
# Provides:          unicorn
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the unicorn web server
# Description:       starts unicorn
### END INIT INFO

set -e

USER="<%= user_name %>"
APP="<%= project_name %>"
USER_PATH="<%= home_dir %>"
PROJECT_PATH="<%= projects_dir %>"
APP_PATH="$PROJECT_PATH/$APP"
RBENV_PATH="$USER_PATH/.rbenv"
DAEMON_NAME="unicorn_<%= environment %>"
DAEMON="$APP_PATH/bin/$DAEMON_NAME"
DAEMON_OPTS=""
NAME="unicorn $APP"
DESC="Unicorn for app $APP"
RESTART_SLEEP=2
PID="$APP_PATH/tmp/pids/unicorn.pid"
old_pid="$PID.oldbin"
CD_TO_APP_DIR="cd $APP_PATH"
START_DAEMON_PROCESS="$DAEMON $DAEMON_OPTS"
TIMEOUT=${TIMEOUT-60}

sig() {
  test -s "$PID" && kill -$1 `cat $PID`
}

oldsig() {
  test -s $old_pid && kill -$1 `cat $old_pid`
}

start_cmd() {
  if [ `whoami` = root ]; then
    su - $USER -c "$CD_TO_APP_DIR > /dev/null 2>&1 && $START_DAEMON_PROCESS"
  else
    $CD_TO_APP_DIR > /dev/null 2>&1 && $START_DAEMON_PROCESS
  fi
  echo "$NAME."
}

case "$1" in
  start)
        sig 0 && echo >&2 "Already running" && exit 0
        echo -n "Starting $DESC: " && start_cmd
        ;;
  stop)
        sig QUIT && echo "Stopping $DESC." && exit 0
        echo >&2 "Not running" && exit 0
        ;;
  force-stop)
        sig TERM && echo "Forcing stop of $DESC" &&  exit 0
        echo >&2 "Not running" && exit 0
        ;;
  restart|reload)
        sig HUP && echo "Reloaded $DESC" && exit 0
        echo >&2 "Couldn't restart, starting instead" && echo -n "Starting $DESC: " && start_cmd
        ;;
  upgrade)
        if sig USR2 && sleep $RESTART_SLEEP && sig 0 && oldsig QUIT
        then
          n=$TIMEOUT
          while test -s $old_pid && test $n -ge 0
          do
            printf '.' && sleep 1 && n=$(( $n - 1 ))
          done
          echo

          if test $n -lt 0 && test -s $old_pid
          then
            echo >&2 "$old_pid still exists after $TIMEOUT seconds"
            exit 1
          fi
          exit 0
        fi
        echo >&2 "Couldn't upgrade, starting instead" && echo -n "Starting $DESC: " && start_cmd
        ;;
  status)
        sig 0 && echo >&2 "Already running"&& exit 0
        echo >&2 "Not running" && exit 1
        ;;
  reopen-logs)
        sig USR1 && echo "Rotated ok" && exit 0
        echo >&2 "Couldn't rotate logs" && exit 1
        ;;
  *)
        echo "Usage: $NAME {start|stop|force-stop|restart|reload|upgrade|status|reopen-logs}" >&2
        exit 1
        ;;
esac

exit 0
